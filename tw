#!/usr/bin/env bash
# twsh - a twtxt client written in bash
# (c) 2019 by Anirudh Oppiliappan (@icyphox) <x@icyphox.sh>
#         and Akshay Oppiliappan (@nerdypepper) <nerdypepper@tuta.io>


# uses default as $HOME
DATA_DIR="$HOME"

if [[ "$OSTYPE" = "linux-gnu" ]]; then
    DATA_DIR="$HOME/.local/share/twsh"
elif [[ "$OSTYPE" = "darwin" ]]; then
    DATA_DIR="$HOME/Library/ApplicationSupport/com.icyphox.twsh"
fi

CONFIG="$DATA_DIR/twshrc"

# sourcing our config
if [[ -f "$CONFIG" ]]
then
	source "$CONFIG"
	if [[ "$TWTXT_FILE" == "" ]]
	then
		echo "twsh: unable to source config"
		exit
	fi
fi


function create_config() {
	mkdir -p "$DATA_DIR"
	touch "$CONFIG"
	twtxt_path=$(readlink -f "$1")
cat << EOF > "$CONFIG"	
#!/usr/bin/env bash
TWTXT_FILE="$twtxt_path/twtxt.txt"
EOF

echo "twsh: created config at $CONFIG"
}

function tweet() {
	text="$1"
	date=$(date -Im)
	tweet="$date\t$text"
	echo -e "$tweet" >> "$TWTXT_FILE"
}

function create_twtxt() {
    mkdir -p "$DATA_DIR"

	if [[ -f "$twtxt" ]]
	then
		read -p "twsh: $twtxt exists, overwrite? [y/n]: " yn
		case $yn in
			[Yy]* ) >$TWTXT_FILE ;;
			[Nn]* ) exit ;;
			* ) echo "twsh: enter yes or no"
		esac
	else
		touch "$TWTXT_FILE"
		echo "twsh: created $TWTXT_FILE"
	fi
}

function help_text () {
cat << EOF
usage: twsh [options]
  -i [path]       create twtxt.txt file
  -t [text]       append tweet to twtxt.txt file
  -h              show this help text
EOF
}

while getopts :iht: options
do
    case $options in
        i) 
            # init
            create_twtxt "$2"
			create_config "$2"
            ;;
        h)
            help_text
            ;;
        t|?)
            # tweet
            tweet "$OPTARG"
            ;;
		h|*)
            help_text
            ;;
    esac
done
